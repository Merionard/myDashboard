generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Account {
  id                 String  @id @default(cuid())
  userId             String
  type               String
  provider           String
  providerAccountId  String
  refresh_token      String?  @db.Text
  access_token       String?  @db.Text
  expires_at         Int?
  token_type         String?
  scope              String?
  id_token           String?  @db.Text
  session_state      String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}


model User {
  id          String   @id @default(cuid())
  email       String   @unique
  name        String?
  emailVerified String?
  role        Role     @default(USER)
  image       String?
  workPeriods WorkPeriod[]
  accounts      Account[]
  sessions      Session[]
}

model Customer {
  id              Int @id @default(autoincrement())
  businessName    String
  VATnumber       String?
  Siren           String?
  Address         Address[]
  workPeriodLine  WorkPeriodLine?
  contact         Contact?
}

model Contact {
  id      Int @id @default(autoincrement())
  name    String
  firstName String
  email   String
  customer Customer @relation(fields:[customerId], references:[id])
  customerId Int
}

model Address {
  id          Int @id @default(autoincrement())
  poCode      Int
  country     String
  addressName        String
  number      Int
  customer    Customer @relation(fields: [customerId], references: [id])
  customerId  Int
}

model WorkPeriod {
id          Int @id @default(autoincrement())
month       Int
year        Int
user        User @relation(fields: [userId], references: [id])
userId      String
lines       WorkPeriodLine[]
}

model WorkPeriodLine {
id            Int @id @default(autoincrement())
customer      Customer @relation(fields: [customerId], references: [id])
customerId    Int @unique
workPeriod    WorkPeriod @relation(fields: [workPeriodId], references: [id])
workPeriodId  Int
nbDaysWorked  Int
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}



enum Role {
  USER
  ADMIN
}